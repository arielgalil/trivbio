{
  "rules": {
    "admins": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      ".write": false
    },
    "questions": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true"
    },
    "players": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      "$playerId": {
        ".read": "auth != null && (auth.uid === $playerId || (root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true))",
        // --- חוק כתיבה מתוקן: מאפשר יצירה ועדכון על ידי הבעלים ---
        ".write": "auth != null && auth.uid === $playerId",
        "nickname": {
          // מאפשר עדכון רק אם השדה קיים
          ".write": "auth != null && auth.uid === $playerId && data.exists()",
          ".validate": "newData.isString() && newData.val().length <= 25"
        },
        "darkMode": {
           // מאפשר עדכון רק אם השדה קיים
          ".write": "auth != null && auth.uid === $playerId && data.exists()",
          ".validate": "newData.isBoolean()"
        },
        "lastTopic": {
           // מאפשר עדכון רק אם השדה קיים
          ".write": "auth != null && auth.uid === $playerId && data.exists()",
          ".validate": "newData.isString()"
        },
        "cumulativeScore": {
           // מאפשר עדכון על ידי הבעלים
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.isNumber()"
        },
        "correctCount": {
           // מאפשר עדכון על ידי הבעלים
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.isNumber()"
        },
        "wrongCount": {
           // מאפשר עדכון על ידי הבעלים
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.isNumber()"
        },
        "topicStats": {
           // מאפשר עדכון על ידי הבעלים
          ".write": "auth != null && auth.uid === $playerId",
          "$topic": {
            ".validate": "newData.hasChildren(['correctCount', 'wrongCount']) && newData.child('correctCount').isNumber() && newData.child('wrongCount').isNumber()"
          }
        },
        "tagStats": {
           // מאפשר עדכון על ידי הבעלים
          ".write": "auth != null && auth.uid === $playerId",
          "$tag": {
            ".validate": "newData.hasChildren(['correctCount', 'wrongCount']) && newData.child('correctCount').isNumber() && newData.child('wrongCount').isNumber()"
          }
        },
        // --- כלל ה-validate הזה עשוי להגביל עדכונים חלקיים, הושאר בהערה או הוסר ---
        // ".validate": "newData.hasChildren(['cumulativeScore', 'correctCount', 'wrongCount', 'topicStats', 'tagStats'])",
        "$other": {
           // מונע כתיבה לשדות לא מוגדרים אחרים
          ".write": false
        }
      }
    },
    "gameResults": {
      "$date": {
        // --- הוספת אינדקס למיון/סינון ---
        ".indexOn": ["correctCount"],
        ".read": "auth != null",
        "$playerId": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.hasChildren(['correctCount', 'totalQuestions', 'longestStreak', 'timestamp', 'topic', 'tools','nickname']) && newData.child('correctCount').isNumber() && newData.child('totalQuestions').isNumber() && newData.child('totalQuestions').val() >= newData.child('correctCount').val() && newData.child('longestStreak').isNumber() && newData.child('timestamp').isString() && newData.child('topic').isString() && newData.child('nickname').isString() && newData.child('tools').hasChildren(['fiftyFifty', 'addTime', 'skips']) && newData.child('tools/fiftyFifty').isBoolean() && newData.child('tools/addTime').isBoolean() && newData.child('tools/skips').isNumber()"
        }
      }
    },
    "leaderboard": {
      // --- הוספת אינדקס למיון/סינון ---
      ".indexOn": ["cumulativeScore"],
      ".read": "auth != null",
      // --- write false כאן בכוונה, העדכון מתבצע דרך טרנזקציה בפונקציה updatePlayerStatsFirebase ---
      ".write": false,
      "$playerId": {
         // --- ניתן להוסיף חוק כתיבה כאן אם רוצים לאפשר עדכון ישיר,
         // אך כרגע הוא מבוצע דרך עדכון נתוני השחקן ---
         // ".write": "auth != null && auth.uid === $playerId",
        ".validate": "newData.hasChildren(['nickname', 'cumulativeScore']) && newData.child('nickname').isString() && newData.child('cumulativeScore').isNumber()"
      }
    }
  }
}