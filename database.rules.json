{
  "rules": {
    "admins": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      ".write": false
    },
    "questions": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true"
    },
    "players": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      "$playerId": {
        ".read": "auth != null && (auth.uid === $playerId || (root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true))",
        ".write": "auth != null && auth.uid === $playerId && !data.exists()", // Allow initial write
        "nickname": {
          ".write": "auth != null && auth.uid === $playerId && data.exists()", // Allow update only
          ".validate": "newData.isString() && newData.val().length <= 25"
        },
        "darkMode": {
          ".write": "auth != null && auth.uid === $playerId && data.exists()", // Allow update only
          ".validate": "newData.isBoolean()"
        },
        "lastTopic": {
          ".write": "auth != null && auth.uid === $playerId && data.exists()", // Allow update only
          ".validate": "newData.isString()"
        },
        "cumulativeScore":{
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.isNumber()"
        },
        "correctCount":{
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.isNumber()"
        },
         "wrongCount":{
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.isNumber()"
        },
        "topicStats":{
           ".write": "auth != null && auth.uid === $playerId",
            "$topic":{
               ".validate": "newData.hasChildren(['correctCount', 'wrongCount']) && newData.child('correctCount').isNumber() && newData.child('wrongCount').isNumber()"
            }
        },
        "tagStats":{
           ".write": "auth != null && auth.uid === $playerId",
           "$tag":{
              ".validate": "newData.hasChildren(['correctCount', 'wrongCount']) && newData.child('correctCount').isNumber() && newData.child('wrongCount').isNumber()"
           }
        },
        "$other": {
          ".write": false
        }
      }
    },
    "gameResults": {
      "$date": {
        ".read": "auth != null",
        "$playerId": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid === $playerId",
          ".validate": "newData.hasChildren(['correctCount', 'totalQuestions', 'longestStreak', 'timestamp', 'topic', 'tools','nickname']) && newData.child('correctCount').isNumber() && newData.child('totalQuestions').isNumber() && newData.child('totalQuestions').val() >= newData.child('correctCount').val() && newData.child('longestStreak').isNumber() && newData.child('timestamp').isString() && newData.child('topic').isString() && newData.child('nickname').isString() && newData.child('tools').hasChildren(['fiftyFifty', 'addTime', 'skips']) && newData.child('tools/fiftyFifty').isBoolean() && newData.child('tools/addTime').isBoolean() && newData.child('tools/skips').isNumber()"
        }
      }
    },
    "leaderboard": {
      ".read": "auth != null",
      ".write": false,
      "$playerId": {
        ".write": "auth != null && auth.uid === $playerId",
        ".validate": "newData.hasChildren(['nickname', 'cumulativeScore']) && newData.child('nickname').isString() && newData.child('cumulativeScore').isNumber()"
      }
    }
  }
}